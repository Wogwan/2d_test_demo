% SOSDEMO2 --- Lyapunov Function Search 
% Section 3.2 of SOSTOOLS User's Manual
% 

clear; echo on;
% syms x1 x2 x3;
% vars = [x1; x2; x3];
syms x1 x2;       
vars = [x1;x2];
x = vars;
% Constructing the vector field dx/dt = f
% f = [-x1^3-x1*x3^2;
%     -x2-x1^2*x2;
%     -x3+3*x1^2*x3-3*x3/(x3^2+1)];
f = [0.19656218160870665546803416469225*x(1)^4+0.093687931417120936569183961047976*x(1)^3+0.089618405479033716762613279469305*x(1)^2-0.44814111032454749065460456828684*x(1)+0.0073377124701547334281737100525334*x(2)^4+0.0079547068942770627480998157921022*x(2)^3+0.009246824066829905167108627495054*x(2)^2+1.1312396820633690008861549358699*x(2)+0.00041702034218470823700997129890311
0.067495543059029688981453887208772*x(1)^4-0.22667175420763052387209926210845*x(1)^3+0.23010071164463722547208055561585*x(1)^2+x(1)*x(2)-0.049837330840173758398729357092331*x(1)-0.00088782618929563275091132457106369*x(2)^4-0.015458943275874799730407183062653*x(2)^3+0.0443020748500156172355879391489*x(2)^2-1.2106509525406325689100839326784*x(2)+0.00012945918797839946902689821651055
];

% =============================================
% First, initialize the sum of squares program
prog = sosprogram(vars);

% =============================================
% The Lyapunov function V(x): 
% [prog,V] = sospolyvar(prog,[x1^2; x2^2; x3^2],'wscoeff');
[prog,V] = sospolyvar(prog,[x1^4; x2^4; x1^2*x2^2; x1^2; x2^2; x1*x2],'wscoeff');

% =============================================
% Next, define SOSP constraints

% Constraint 1 : V(x) - (x1^2 + x2^2 + x3^2) >= 0
% prog = sosineq(prog,V-(x1^2+x2^2+x3^2));
prog = sosineq(prog,V-(x1^2+x2^2));

% Constraint 2: -dV/dx*(x3^2+1)*f >= 0
expr = -(diff(V,x1)*f(1)+diff(V,x2)*f(2))*(x2^2+1);
prog = sosineq(prog,expr);

% =============================================
% And call solver
solver_opt.solver = 'sdpam';
prog = sossolve(prog,solver_opt);

% =============================================
% Finally, get solution
SOLV = sosgetsol(prog,V)
echo off;