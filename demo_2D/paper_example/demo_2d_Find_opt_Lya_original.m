clear;
pvar x1 x2 u1 u2 htol epsi;
format long
x = [x1;x2];
%%
dom = 10; domain = [-dom dom -dom dom];
f = [x2-x1
    -0.23606416828637188828796009029584*x1^4+0.24650838581310801777701368775053*x1^3+x1^2*x2-0.7173309565565305634393666878168*x1^2+0.26453823849708858750862106035129*x1+0.03729676680157056195552556232542*x2^4+0.01893812978180069162004173222158*x2^3+0.13680422363948308017711497086566*x2^2+0.043563863537901807709840085180986*x2+0.23883336887991710173473336453753
    ];
gg = [1; 1];
sys = [f(1)+gg(1)*u1; f(2)+gg(2)*u2];
%%
C1 = (x1+4)^2+(x2-6)^2-4;
C2 = (x1+0)^2+(x2+5)^2-4;
C3 = (x1-5)^2+(x2-0)^2-4;
C = [C1;C2;C3];
%%
V0 = 1*x1^4+1*x1^3*x2+1*x1^2*x2^2+1*x1*x2^3+1*x2^4+1*x1^3+1*x1^2*x2+1*x1*x2^2+1*x2^3+1*x1^2+1*x1*x2+1*x2^2+1*x1+1*x2+1;
CC0 = 57.23191181351641;
%% Start to compute the control barrier function
u1 = 27.117638374224238617671289830469*x2 - 43.537980296159538795564003521577*x1 + 6.2685205882035486268932800157927*x1^2*x2^2 + 48.767171837473327400402922648937*x1*x2 - 51.331639871971759703228599391878*x1*x2^2 - 22.54504067535604505678747955244*x1^2*x2 + 7.0819582397561378073191917792428*x1*x2^3 + 5.4519261156109193322549799631815*x1^3*x2 + 41.527419779769765284527238691226*x1^2 - 45.406171771405766435236728284508*x1^3 - 33.497604189619622161444567609578*x2^2 + 4.6408340978236468643558509938885*x1^4 + 23.471832340447061682198182097636*x2^3 - 15.309824941869518255543880513869*x2^4 - 26.333180961597619784697599243373;
u2 = 10.770339375549928817576983419713*x1 - 47.378937080948524851464753737673*x2 + 2.2028229168295170303792929189513*x1^2*x2^2 + 31.596569679441788736085072741844*x1*x2 + 34.430634593737650561706686858088*x1*x2^2 - 37.496570785010831627914740238339*x1^2*x2 + 3.0122678321209050977813603822142*x1*x2^3 + 1.3886671622309409990236872545211*x1^3*x2 - 45.461323410552758161884412402287*x1^2 + 81.658491333907818443549331277609*x1^3 - 12.392313023447011133271189464722*x2^2 - 18.328517895686161409685155376792*x1^4 - 32.435423417952243596573680406436*x2^3 + 3.7899287428614871764409599563805*x2^4 - 6.7206204839190917255109525285661;
B = 0.17192107843358903074282295619923*x1*x2 - 8.4180131770026243032134516397491*x2 - 6.0772129097317932888699942850508*x1^2*x2^2 - 6.6670153818302608783596951980144*x1 + 9.1801787280573474703260217211209*x1*x2^2 + 6.6843867620264880713421007385477*x1^2*x2 - 6.0790938566016201605179958278313*x1*x2^3 - 6.079189802196987457705290580634*x1^3*x2 + 2.4249192465239501892426687845727*x1^2 - 0.92737271296355883176687484592549*x1^3 + 4.8728071146172355909698126197327*x2^2 - 6.0799020251652962087973719462752*x1^4 + 5.0251205221642951670446564094163*x2^3 - 6.0793927723695011522409004101064*x2^4 + 498.41063452804098687920486554503;
%%
c0 = 1; cc = 1.1; epsi = 1e-6; figure_id = 111;
%%
figure(figure_id);clf;hold on;
[~,~]=pcontour(C(1),0,domain,'r');
[~,~]=pcontour(C(2),0,domain,'r');
if length(C) == 3
    [~,~]=pcontour(C(3),0,domain,'r');
elseif length(C) == 4
    [~,~]=pcontour(C(3),0,domain,'r');
    [~,~]=pcontour(C(4),0,domain,'r');
else
    fprintf('The constraint number does not match.======\n');
end
hold on; [~,~]=pcontour(B,0,domain,'g');
[~,~]=pcontour(V0,double(CC0),domain,'m');
%% Hyperparameters of the SOSP @ CBF -> V
V_us = 4; V_au = 4; V_degree = 4; gamma = 0; k_u_V = 2; k_l_au = 4;
%%
kk = 1; OO = 0;
dom_2 = 10000; domain_2 = [-dom_2 dom_2 -dom_2 dom_2]; N_Lya = [];
%%
[V, kk] = sos_optimal_V1(f,gg,B,u1,u2,V_au,V_us,V_degree,C,gamma);
%%
if kk == 0
    fprintf('Suitable Lyapunov function can not find.======\n');
end
N_Lya = [N_Lya;V];
%% TEST FOR Sublevel Set
[a1,b1] = coeffs(p2s(V));
ccc = double(vpa(a1(end)));
C0 = ccc; cc = ccc+1;
%%
figure(figure_id);hold on;
[~,~]=pcontour(V,double(C0),domain,'r');
solU = []; v_c = []; iter = 0;
%%
while double(cc)-double(C0) >= epsi
    iter = iter + 1;
    if iter ~= 0
        C0 = cc;
    end
    [solL,kk]= sos_optimal_v2_origin(f,gg,k_u_V,k_l_au,V,cc);
    if kk == 0
        break
    end
    [cc,kk,solu1,solu2] = sos_optimal_v3_origin(f,gg,k_u_V,k_l_au,V,C,dom,solL,ccc,figure_id);
    v_c = [v_c; double(cc)];
    solU = [solU;[solu1,solu2]];
    if kk == 0
        figure(figure_id);hold on;
        [~,~]=pcontour(V,v_c(end),domain,'b');
        break
    end
end
%% Start to compute the control barrier function
c_b = v_c(end);
sol_B = c_b - N_Lya(end);
hold on;[~,~]=pcontour(sol_B,0,domain,'k');
V = N_Lya(end);
%%
fprintf('Sublevel set of V∗(x) is \n%s \n\n',char(vpa(p2s(V))));
fprintf('Sublevel set of V∗(x) is %.14f. \n',v_c(end));