clear;
pvar x1 x2 u1 u2 htol epsi;
format long
x = [x1;x2];
%%
dom = 10; domain = [-dom dom -dom dom];
f = [x2-x1
    -0.23606416828637188828796009029584*x1^4+0.24650838581310801777701368775053*x1^3+x1^2*x2-0.7173309565565305634393666878168*x1^2+0.26453823849708858750862106035129*x1+0.03729676680157056195552556232542*x2^4+0.01893812978180069162004173222158*x2^3+0.13680422363948308017711497086566*x2^2+0.043563863537901807709840085180986*x2+0.23883336887991710173473336453753
    ];
gg = [1; 1];
sys = [f(1)+gg(1)*u1; f(2)+gg(2)*u2];
%%
C1 = (x1+4)^2+(x2-5)^2-4;
C2 = (x1+0)^2+(x2+5)^2-4;
C3 = (x1-5)^2+(x2-0)^2-4;
C = [C1;C2;C3];
%%
V0 = 1*x1^4+1*x1^3*x2+1*x1^2*x2^2+1*x1*x2^3+1*x2^4+1*x1^3+1*x1^2*x2+1*x1*x2^2+1*x2^3+1*x1^2+1*x1*x2+1*x2^2+1*x1+1*x2+1;
CC0 = 57.23191153176421;
%% Start to compute the control barrier function
u1 = 9.3952410287208731887176327290945*x2 - 16.640458067378478546061160159297*x1 + 0.8906803954669305634084253142646*x1^2*x2^2 + 5.9625026138365821992692872299813*x1*x2 - 9.9384899092039340473547781584784*x1*x2^2 + 1.0581402721087209695127739905729*x1^2*x2 + 0.64999265220580426660745843037148*x1*x2^3 + 1.1313482215906525141235761111602*x1^3*x2 + 17.711117899459480895529850386083*x1^2 - 12.04374713807426466871675074799*x1^3 - 7.3987170026754389695611280330922*x2^2 + 1.37201244762071761229549338168*x1^4 + 8.9249451499725349634672966203652*x2^3 - 6.4507273251190957452649854531046*x2^4 - 7.1899660094449018288287334144115;
u2 = 10.231297404163044006963900756091*x1 - 17.631891091233367063750847592019*x2 + 2.0940272155077921389931816520402*x1^2*x2^2 + 6.3289997140453424506745250255335*x1*x2 + 1.3426973410010585308071995314094*x1*x2^2 - 10.542478309117468526778793602716*x1^2*x2 + 1.8533564525599699468472181251855*x1*x2^3 + 2.3346786951943157006894580263179*x1^3*x2 - 6.5785586077199251775482480297796*x1^2 + 8.5406314096962159254644575412385*x1^3 + 17.704469001934455718583194538951*x2^2 - 5.2519854362221574106683874560986*x1^4 - 12.084684356394319593164254911244*x2^3 + 1.575385162574158393056222848827*x2^4 - 7.6087538697783561048026967910118;
B = 1.3576759131504796407341473241104*x1*x2^2 - 3.0578816793752339187051347835222*x2 - 1.0488854530197364578469887419487*x1^2*x2^2 - 1.5393659377436941237959899808629*x1*x2 - 2.7790279263382875463150867290096*x1 + 0.99353551144585727783464790263679*x1^2*x2 - 1.0487971515579199710543889523251*x1*x2^3 - 1.0487550290522178464414082554867*x1^3*x2 - 0.59598573150985978408300525188679*x1^2 + 0.12189338665773290226734815178133*x1^3 - 0.4054861188650786818499227592838*x2^2 - 1.0495083410765784215357143693836*x1^4 + 0.77761775628344664834656896346132*x2^3 - 1.0494081234319465600890453060856*x2^4 + 89.818684691415668908121006097645;
%%
c0 = 1; cc = 1.1; epsi = 1e-6; figure_id = 111;
%%
figure(figure_id);clf;hold on;
[~,~]=pcontour(C(1),0,domain,'r');
[~,~]=pcontour(C(2),0,domain,'r');
if length(C) == 3
    [~,~]=pcontour(C(3),0,domain,'r');
elseif length(C) == 4
    [~,~]=pcontour(C(3),0,domain,'r');
    [~,~]=pcontour(C(4),0,domain,'r');
else
    fprintf('The constraint number does not match.======\n');
end
hold on; [~,~]=pcontour(B,0,domain,'g');
[~,~]=pcontour(V0,double(CC0),domain,'m');
%% Hyperparameters of the SOSP @ CBF -> V
V_us = 4; V_au = 4; V_degree = 4; gamma = 0; k_u_V = 2; k_l_au = 4;
%%
kk = 1; OO = 0;
dom_2 = 10000; domain_2 = [-dom_2 dom_2 -dom_2 dom_2]; N_Lya = [];
%%
[V, kk] = sos_optimal_V1(f,gg,B,u1,u2,V_au,V_us,V_degree,C,gamma);
%%
if kk == 0
    fprintf('Suitable Lyapunov function can not find.======\n');
end
N_Lya = [N_Lya;V];
%% TEST FOR Sublevel Set
[a1,b1] = coeffs(p2s(V));
ccc = double(vpa(a1(end)));
C0 = ccc; cc = ccc+1;
%%
figure(figure_id);hold on;
[~,~]=pcontour(V,double(C0),domain,'r');
solU = []; v_c = []; iter = 0;
%%
while double(cc)-double(C0) >= epsi
    iter = iter + 1;
    if iter ~= 0
        C0 = cc;
    end
    [solL,kk]= sos_optimal_v2_origin(f,gg,k_u_V,k_l_au,V,cc);
    if kk == 0
        break
    end
    [cc,kk,solu1,solu2] = sos_optimal_v3_origin(f,gg,k_u_V,k_l_au,V,C,dom,solL,ccc,figure_id);
    v_c = [v_c; double(cc)];
    solU = [solU;[solu1,solu2]];
    if kk == 0
        figure(figure_id);hold on;
        [~,~]=pcontour(V,v_c(end),domain,'b');
        break
    end
end
%% Start to compute the control barrier function
c_b = v_c(end);
sol_B = c_b - N_Lya(end);
hold on;[~,~]=pcontour(sol_B,0,domain,'k');
V = N_Lya(end);
%%
fprintf('Sublevel set of V∗(x) is \n%s \n\n',char(vpa(p2s(V))));
fprintf('Sublevel set of V∗(x) is %.14f. \n',v_c(end));